events {
  worker_connections  4096;  ## Default: 1024
}

http {
    server_names_hash_bucket_size   128;
    server_names_hash_max_size    1024;
    proxy_buffer_size 8k;
    log_format postwithbody escape=json '{"version":"V_0.99J", "resource_group":"IngressProxyDebug", "server_name":"$server_name", "remote_addr":"$remote_addr", "remote_user":"$remote_user", "time_local":"$time_iso8601", '
                                    ' "request_method":"$request_method", "request_uri":"$request_uri", '
                                    '"HTTP_STATUS":"$status", "Request_time(secs)":"$request_time", "total_bytes_sent":"$bytes_sent", "body_bytes_sent":"$body_bytes_sent", '
                                    '"http_referer":"$http_referer", "http_user_agent":"$http_user_agent", "request_body":"$request_body"}';
                                    
    log_format proxydefault escape=json '{"version":"V_0.99J", "resource_group":"IngressProxy", "server_name":"$server_name", "remote_addr":"$remote_addr", "remote_user":"$remote_user", "time_local":"$time_iso8601", '
                                    ' "request_method":"$request_method", "request_uri":"$request_uri", '
                                    '"HTTP_STATUS":"$status", "Request_time(secs)":"$request_time", "total_bytes_sent":"$bytes_sent", "body_bytes_sent":"$body_bytes_sent", '
                                    '"http_referer":"$http_referer", "http_user_agent":"$http_user_agent"}';
                                    
    log_format swaggerdefault escape=json '{"version":"V_0.99J", "resource_group":"Swagger", "server_name":"$server_name", "remote_addr":"$remote_addr", "remote_user":"$remote_user", "time_local":"$time_iso8601", '
                                    ' "request_method":"$request_method", "request_uri":"$request_uri", '
                                    '"HTTP_STATUS":"$status", "Request_time(secs)":"$request_time", "total_bytes_sent":"$bytes_sent", "body_bytes_sent":"$body_bytes_sent", '
                                    '"http_referer":"$http_referer", "http_user_agent":"$http_user_agent"}';

    log_format assessmentdefault escape=json '{"version":"V_0.99J", "resource_group":"ChangeAssessment", "server_name":"$server_name", "remote_addr":"$remote_addr", "remote_user":"$remote_user", "time_local":"$time_iso8601", '
                                    ' "request_method":"$request_method", "request_uri":"$request_uri", '
                                    '"HTTP_STATUS":"$status", "Request_time(secs)":"$request_time", "total_bytes_sent":"$bytes_sent", "body_bytes_sent":"$body_bytes_sent", '
                                    '"http_referer":"$http_referer", "http_user_agent":"$http_user_agent"}';
                                    
    log_format exceptionrequestdefault escape=json '{"version":"V_0.99J", "resource_group":"ExceptionRequest", "server_name":"$server_name", "remote_addr":"$remote_addr", "remote_user":"$remote_user", "time_local":"$time_iso8601", '
                                    ' "request_method":"$request_method", "request_uri":"$request_uri", '
                                    '"HTTP_STATUS":"$status", "Request_time(secs)":"$request_time", "total_bytes_sent":"$bytes_sent", "body_bytes_sent":"$body_bytes_sent", '
                                    '"http_referer":"$http_referer", "http_user_agent":"$http_user_agent"}';
                                    
    log_format eventsretrievaldefault escape=json '{"version":"V_0.99J", "resource_group":"EventsRetrieval", "server_name":"$server_name", "remote_addr":"$remote_addr", "remote_user":"$remote_user", "time_local":"$time_iso8601", '
                                    ' "request_method":"$request_method", "request_uri":"$request_uri", '
                                    '"HTTP_STATUS":"$status", "Request_time(secs)":"$request_time", "total_bytes_sent":"$bytes_sent", "body_bytes_sent":"$body_bytes_sent", '
                                    '"http_referer":"$http_referer", "http_user_agent":"$http_user_agent"}';
                                    
    log_format servicesinfodefault escape=json '{"version":"V_0.99J", "resource_group":"ServicesInfo", "server_name":"$server_name", "remote_addr":"$remote_addr", "remote_user":"$remote_user", "time_local":"$time_iso8601", '
                                    ' "request_method":"$request_method", "request_uri":"$request_uri", '
                                    '"HTTP_STATUS":"$status", "Request_time(secs)":"$request_time", "total_bytes_sent":"$bytes_sent", "body_bytes_sent":"$body_bytes_sent", '
                                    '"http_referer":"$http_referer", "http_user_agent":"$http_user_agent"}';
                                    
    access_log /var/log/nginx/access.log proxydefault;                                    

    server { # This server handles ASSESSMENT traffic on 443
        listen              443 ssl;
        server_name         assessment.changemanager.fcm.azure.microsoft.com;
        ssl_certificate     /etc/nginx/secrets/changemanager.fcm.azure.microsoft.com.crt;
        ssl_certificate_key /etc/nginx/secrets/changemanager.fcm.azure.microsoft.com.key;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;
        root                /usr/share/nginx/html;
        access_log /var/log/nginx/access.log assessmentdefault;                                    
        
        ssl_client_certificate /etc/nginx/secrets/client.changeassessment.crt;
        ssl_verify_client on;

        if ($ssl_client_s_dn !~* 'icmclientcert\.(test|prod)\.azureservicedeploy\.msft\.net') {
            return 400 '<html><head><title>400 No required SSL certificate was sent</title></head><body><center><h1>400 Bad Request</h1></center><center>No required SSL certificate was sent</center><hr></body></html>';
        }
        
        include oauth2.conf;

        location /changeassessment/ {

            proxy_pass http://changeassessment/changeassessment/;
        }
    }

    server { # This server handles API requests on 443
        listen              443 ssl;
        server_name         changemanager.fcm.azure.microsoft.com;
        ssl_certificate     /etc/nginx/secrets/changemanager.fcm.azure.microsoft.com.crt;
        ssl_certificate_key /etc/nginx/secrets/changemanager.fcm.azure.microsoft.com.key;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;
        root        /usr/share/nginx/html;
        
        include oauth2.conf;
        
        location /api/changeassessment/ {
            include cors.conf;
            include signin.conf;

            access_log /var/log/nginx/access.log assessmentdefault;                                    

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_pass http://changeassessment/changeassessment/;
            proxy_ssl_session_reuse off;
            proxy_set_header Host $http_host;
            proxy_redirect off;
        }
        
        location /api/eventsretrieval/ {
            include cors.conf;
            include signin.conf;

            access_log /var/log/nginx/access.log eventsretrievaldefault;                                    

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_pass http://eventsretrieval/eventsretrieval/;
            proxy_ssl_session_reuse off;
            proxy_set_header Host $http_host;
            proxy_redirect off;
        }
        
        location /api/exceptionrequest/ {
            include cors.conf;
            include signin.conf;

            access_log /var/log/nginx/access.log exceptionrequestdefault;                                    

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_pass http://exceptionrequest/exceptionrequest/;
            proxy_ssl_session_reuse off;
            proxy_set_header Host $http_host;
            proxy_redirect off;
        }
        
        location /api/servicesinfo/ {
            include cors.conf;
            include signin.conf;

            access_log /var/log/nginx/access.log servicesinfodefault;                                    

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_pass http://servicesinformation/servicesinfo/;
            proxy_ssl_session_reuse off;
            proxy_set_header Host $http_host;
            proxy_redirect off;
        }
    }
}